version: '3.8'

services:
  postgres:
    image: postgres:15-alpine
    container_name: kalshi_postgres
    environment:
      POSTGRES_DB: kalshi_trading
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init_db.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - kalshi_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    container_name: kalshi_redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - kalshi_network
    command: redis-server --appendonly yes
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  dashboard:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: kalshi_dashboard
    ports:
      - "8501:8501"
    environment:
      DATABASE_URL: postgresql://postgres:postgres@postgres:5432/kalshi_trading
      REDIS_URL: redis://redis:6379
      STREAMLIT_SERVER_PORT: 8501
      STREAMLIT_SERVER_ADDRESS: 0.0.0.0
      STREAMLIT_SERVER_HEADLESS: true
      STREAMLIT_BROWSER_GATHER_USAGE_STATS: false
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - kalshi_network
    restart: unless-stopped

volumes:
  postgres_data:
  redis_data:

networks:
  kalshi_network:
    driver: bridge