name: PR Checks

on:
  pull_request:
    types: [opened, synchronize, reopened, ready_for_review]

jobs:
  label-pr:
    name: Label PR
    runs-on: ubuntu-latest
    permissions:
      pull-requests: write
    steps:
      - uses: actions/labeler@v5
        with:
          repo-token: "${{ secrets.GITHUB_TOKEN }}"
          sync-labels: true

  check-pr-title:
    name: Check PR Title
    runs-on: ubuntu-latest
    steps:
      - name: Check PR title format
        run: |
          PR_TITLE="${{ github.event.pull_request.title }}"
          echo "PR Title: $PR_TITLE"
          
          # Check if title matches expected format
          if ! [[ "$PR_TITLE" =~ ^\[(FEATURE|BUGFIX|HOTFIX|DOCS|TEST|CHORE|REFACTOR)\] ]]; then
            echo "❌ PR title must start with [TYPE] where TYPE is one of:"
            echo "   FEATURE, BUGFIX, HOTFIX, DOCS, TEST, CHORE, REFACTOR"
            echo ""
            echo "Examples:"
            echo "   [FEATURE] Add WebSocket reconnection logic"
            echo "   [BUGFIX] Fix Redis timeout handling"
            echo "   [DOCS] Update installation guide"
            exit 1
          fi
          
          echo "✅ PR title format is correct"

  size-check:
    name: PR Size Check
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Check PR size
        run: |
          # Get PR statistics
          ADDITIONS=${{ github.event.pull_request.additions }}
          DELETIONS=${{ github.event.pull_request.deletions }}
          TOTAL_CHANGES=$((ADDITIONS + DELETIONS))
          FILES_CHANGED=${{ github.event.pull_request.changed_files }}
          
          echo "📊 PR Statistics:"
          echo "   Files changed: $FILES_CHANGED"
          echo "   Lines added: $ADDITIONS"
          echo "   Lines deleted: $DELETIONS"
          echo "   Total changes: $TOTAL_CHANGES"
          
          # Warn if PR is too large
          if [ $TOTAL_CHANGES -gt 1000 ]; then
            echo "⚠️ Warning: Large PR detected (>1000 lines)"
            echo "Consider breaking this into smaller PRs for easier review"
          fi
          
          if [ $FILES_CHANGED -gt 20 ]; then
            echo "⚠️ Warning: Many files changed (>20 files)"
            echo "Consider breaking this into smaller PRs for easier review"
          fi

  conflict-check:
    name: Check Merge Conflicts
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ github.event.pull_request.head.sha }}
          fetch-depth: 0
      
      - name: Check for merge conflicts
        run: |
          # Fetch base branch
          git fetch origin ${{ github.event.pull_request.base.ref }}
          
          # Try to merge
          if git merge-tree $(git merge-base HEAD origin/${{ github.event.pull_request.base.ref }}) HEAD origin/${{ github.event.pull_request.base.ref }} | grep -q "<<<<<<< "; then
            echo "❌ Merge conflicts detected"
            echo "Please resolve conflicts with the base branch"
            exit 1
          else
            echo "✅ No merge conflicts"
          fi

  dependency-review:
    name: Dependency Review
    runs-on: ubuntu-latest
    if: github.event.pull_request.draft == false
    steps:
      - uses: actions/checkout@v4
      
      - name: Check for dependency changes
        run: |
          # Check if dependencies changed
          if git diff --name-only origin/${{ github.event.pull_request.base.ref }}..HEAD | grep -E "(requirements|pyproject.toml|uv.lock)"; then
            echo "📦 Dependencies modified in this PR"
            echo "Please ensure:"
            echo "1. All new dependencies are necessary"
            echo "2. Versions are pinned appropriately"
            echo "3. No security vulnerabilities introduced"
            echo "4. LICENSE is compatible"
          else
            echo "✅ No dependency changes"
          fi