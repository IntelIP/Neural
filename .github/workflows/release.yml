name: Release Pipeline

on:
  push:
    tags:
      - 'v*.*.*'
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to release (e.g., v1.0.0)'
        required: true
        type: string

env:
  PYTHON_VERSION: "3.10"
  UV_VERSION: "0.5.25"

jobs:
  validate-version:
    name: Validate Version
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.get_version.outputs.version }}
    steps:
      - uses: actions/checkout@v4
      
      - name: Get version
        id: get_version
        run: |
          if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
            VERSION="${{ github.event.inputs.version }}"
          else
            VERSION=${GITHUB_REF#refs/tags/}
          fi
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          echo "üì¶ Version: $VERSION"
      
      - name: Validate version format
        run: |
          VERSION="${{ steps.get_version.outputs.version }}"
          if ! [[ "$VERSION" =~ ^v[0-9]+\.[0-9]+\.[0-9]+(-[a-zA-Z0-9]+)?$ ]]; then
            echo "‚ùå Invalid version format: $VERSION"
            echo "Expected format: vX.Y.Z or vX.Y.Z-suffix"
            exit 1
          fi
          echo "‚úÖ Valid version format"

  build-release:
    name: Build Release
    runs-on: ubuntu-latest
    needs: validate-version
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}
      
      - name: Install UV
        run: |
          curl -LsSf https://astral.sh/uv/${{ env.UV_VERSION }}/install.sh | sh
          echo "$HOME/.local/bin" >> $GITHUB_PATH
      
      - name: Update version in pyproject.toml
        run: |
          VERSION="${{ needs.validate-version.outputs.version }}"
          VERSION_NO_V=${VERSION#v}
          sed -i "s/version = \".*\"/version = \"$VERSION_NO_V\"/" pyproject.toml
          echo "Updated version to $VERSION_NO_V"
      
      - name: Build distribution
        run: |
          uv build
          ls -la dist/
      
      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: dist
          path: dist/

  test-release:
    name: Test Release Package
    runs-on: ubuntu-latest
    needs: build-release
    strategy:
      matrix:
        python-version: ["3.10", "3.11", "3.12"]
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
      
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          name: dist
          path: dist/
      
      - name: Install package
        run: |
          pip install dist/*.whl
          python -c "import agent_consumers; print('‚úÖ Package imported successfully')"

  create-github-release:
    name: Create GitHub Release
    runs-on: ubuntu-latest
    needs: [validate-version, build-release, test-release]
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          name: dist
          path: dist/
      
      - name: Generate changelog
        id: changelog
        run: |
          VERSION="${{ needs.validate-version.outputs.version }}"
          
          # Get previous tag
          PREV_TAG=$(git describe --tags --abbrev=0 HEAD^ 2>/dev/null || echo "")
          
          if [ -z "$PREV_TAG" ]; then
            echo "First release - showing all commits"
            COMMITS=$(git log --pretty=format:"- %s (%an)" | head -20)
          else
            echo "Changes since $PREV_TAG"
            COMMITS=$(git log $PREV_TAG..HEAD --pretty=format:"- %s (%an)")
          fi
          
          # Create changelog
          cat << EOF > CHANGELOG.md
          ## What's Changed in $VERSION
          
          ### Commits
          $COMMITS
          
          ### Contributors
          $(git log $PREV_TAG..HEAD --pretty=format:"%an" | sort -u | sed 's/^/- @/')
          
          ### Full Changelog
          ${PREV_TAG:+$PREV_TAG...}$VERSION
          EOF
          
          cat CHANGELOG.md
      
      - name: Create Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ needs.validate-version.outputs.version }}
          name: Release ${{ needs.validate-version.outputs.version }}
          body_path: CHANGELOG.md
          draft: false
          prerelease: ${{ contains(needs.validate-version.outputs.version, '-') }}
          files: |
            dist/*
          generate_release_notes: true

  deploy-staging:
    name: Deploy to Staging
    runs-on: ubuntu-latest
    needs: create-github-release
    if: contains(needs.validate-version.outputs.version, '-')
    environment: staging
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ needs.validate-version.outputs.version }}
      
      - name: Install Agentuity CLI
        run: |
          # Install Agentuity CLI
          npm install -g @agentuity/cli
      
      - name: Deploy to Staging
        env:
          AGENTUITY_SDK_KEY: ${{ secrets.AGENTUITY_SDK_KEY }}
          AGENTUITY_PROJECT_KEY: ${{ secrets.AGENTUITY_PROJECT_KEY }}
        run: |
          echo "üöÄ Deploying to staging environment"
          # agentuity deploy --env staging --tag ${{ needs.validate-version.outputs.version }}
          echo "Deployment command would run here"

  deploy-production:
    name: Deploy to Production
    runs-on: ubuntu-latest
    needs: [validate-version, create-github-release]
    if: "!contains(needs.validate-version.outputs.version, '-')"
    environment: production
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ needs.validate-version.outputs.version }}
      
      - name: Install Agentuity CLI
        run: |
          # Install Agentuity CLI
          npm install -g @agentuity/cli
      
      - name: Pre-deployment checks
        run: |
          echo "Running pre-deployment checks..."
          
          # Check required files
          for file in agentuity.yaml pyproject.toml README.md; do
            if [ ! -f "$file" ]; then
              echo "‚ùå Required file missing: $file"
              exit 1
            fi
          done
          
          echo "‚úÖ All required files present"
      
      - name: Deploy to Production
        env:
          AGENTUITY_SDK_KEY: ${{ secrets.AGENTUITY_SDK_KEY }}
          AGENTUITY_PROJECT_KEY: ${{ secrets.AGENTUITY_PROJECT_KEY }}
          KALSHI_API_KEY_ID: ${{ secrets.KALSHI_API_KEY_ID }}
          KALSHI_PRIVATE_KEY: ${{ secrets.KALSHI_PRIVATE_KEY }}
          OPENROUTER_API_KEY: ${{ secrets.OPENROUTER_API_KEY }}
        run: |
          echo "üöÄ Deploying to production environment"
          # agentuity deploy --env production --tag ${{ needs.validate-version.outputs.version }}
          echo "Deployment command would run here"
      
      - name: Verify deployment
        run: |
          echo "Verifying deployment..."
          # agentuity status --env production
          echo "‚úÖ Deployment verification would run here"
      
      - name: Notify team
        if: success()
        run: |
          echo "üìß Sending deployment notification"
          echo "Version ${{ needs.validate-version.outputs.version }} deployed to production"

  rollback-on-failure:
    name: Rollback on Failure
    runs-on: ubuntu-latest
    needs: [deploy-production]
    if: failure()
    environment: production
    steps:
      - name: Trigger rollback
        run: |
          echo "‚ö†Ô∏è Deployment failed - initiating rollback"
          # Get previous version and redeploy
          # agentuity rollback --env production
          echo "Rollback would be triggered here"
      
      - name: Create incident
        run: |
          echo "üìù Creating incident report"
          # gh issue create --title "Production deployment failed: ${{ needs.validate-version.outputs.version }}" --body "Automatic rollback initiated"